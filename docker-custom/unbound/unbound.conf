## Simple recursive caching DNS, UDP port 53
## unbound.conf -- https://nlnetlabs.nl/documentation/unbound/unbound.conf/
## Revision Maicol K. Oliveira
server:

    ### Usuario do daemon e permissoes ( chown unbound.unbound /etc/unbound -R )
        directory: "/etc/unbound"
        username: unbound

    # Uso de dns root ( RFC5011 )
        auto-trust-anchor-file: "/etc/unbound/root.key"

    ### Restringe consultas para estas redes
        access-control: 0.0.0.0/0 refuse
        access-control: 192.168.70.0/24 allow
        access-control: 127.0.0.0/8 allow

    ### Exemplo para Bloqueio de domínios
        #local-zone: "doubleclick.net" redirect
        #local-data: "doubleclick.net A 127.0.0.1"

    ### Interfaces de escuta para o DNS | Porta | Protocolo UDP/TCP
        interface: 0.0.0.0
        interface: ::0

        port: 53
        do-udp: yes
        do-tcp: yes
        num-threads: 2 ## 1  = disabled

    ### Memory adjusts
        rrset-cache-size: 256m
        msg-cache-size: 1024m

    ### Optimization
        msg-cache-slabs: 8
        rrset-cache-slabs: 8
        infra-cache-slabs: 8
        key-cache-slabs: 8
    
    ### Habilitar recursão IPV4|IPV6
        do-ip4: yes
        do-ip6: no

    ### log file | log-queries > NÃO DEIXAR ATIVO EM PRODUÇÃO
        logfile: "/etc/unbound/unbound.log"
        log-queries: yes
        verbosity: 1

    ### If set, a total number of unwanted replies is kept track  of  in
    #          every thread.  When it reaches the threshold, a defensive action
    #          is taken and a warning is printed to  the  log.   The  defensive
    #          action  is  to  clear  the  rrset  and message caches, hopefully
    #          flushing away any poison.  A value of 10 million  is  suggested.
    #          Default is 0 (turned off).
    ### Log de inundação e ações de limpeza
        unwanted-reply-threshold: 10000

    # Limitação de requests de localhost
        do-not-query-localhost: no

    ### harden-glue: <yes or no>
    #          Will  trust  glue  only  if  it is within the servers authority.
    #          Default is yes.
        harden-glue: yes
    
    ### harden-dnssec-stripped: <yes or no>
    #          Require DNSSEC data for trust-anchored zones, if  such  data  is
    #          absent,  the  zone  becomes  bogus. If turned off, and no DNSSEC
    #          data is received (or the DNSKEY data fails  to  validate),  then
    #          the  zone  is made insecure, this behaves like there is no trust
    #          anchor. You could turn this off if you are sometimes  behind  an
    #          intrusive  firewall (of some sort) that removes DNSSEC data from
    #          packets, or a zone changes from  signed  to  unsigned  to  badly
    #          signed  often.  If  turned  off  you run the risk of a downgrade
    #          attack that disables security for a zone. Default is yes.
        harden-dnssec-stripped: yes

    ### root-hints: <filename>
    #          Read the root hints from this file. Default  is  nothing,  using
    #          builtin  hints for the IN class. The file has the format of zone
    #          files, with  root  nameserver  names  and  addresses  only.  The
    #          default  may  become outdated, when servers change, therefore it
    #          is good practice to use a root-hints file.
        root-hints: "/etc/unbound/root.hints"

    ### aggressive-nsec: <yes or no>
    #          Aggressive NSEC uses the DNSSEC NSEC chain to  synthesize  NXDO-
    #          MAIN  and  other  denials, using information from previous NXDO-
    #          MAINs answers.  Default is no.  It helps  to  reduce  the  query
    #          rate  towards  targets  that  get  a  very high nonexistent name
    #          lookup rate.
        aggressive-nsec: yes

    ### cache-min-ttl: <seconds>
    #          Time  to  live  minimum  for  RRsets  and messages in the cache.
    #          Default is 0.  If the minimum kicks in, the data is  cached  for
    #          longer than the domain owner intended, and thus less queries are
    #          made to look up the data.  Zero makes sure the data in the cache
    #          is  as the domain owner intended, higher values, especially more
    #          than an hour or so, can lead to trouble as the data in the cache
    #          does not match up with the actual data any more.
        cache-min-ttl: 3600
        
    ### cache-max-ttl: <seconds>
    #          Time  to  live  maximum  for  RRsets  and messages in the cache.
    #          Default is 86400 seconds (1 day).  When  the  TTL  expires,  the
    #          cache  item has expired.  Can be set lower to force the resolver
    #          to query for data often, and not trust (very large) TTL  values.
    #          Downstream clients also see the lower TTL.
        cache-max-ttl: 86400

    ### hide-identity | hide-version: <yes or no>
    #          If enabled id.server and hostname.bind queries are refused
    #          If enabled version.server and version.bind queries are refused.
        hide-identity: yes
        hide-version: yes      

    ### extended-statistics: <yes or no>
    #          If  enabled,  extended  statistics are printed from unbound-con-
    #          trol(8).  Default is off, because keeping track of more  statis-
    #          tics takes time.  The counters are listed in unbound-control(8).
        extended-statistics: yes

    ### use-caps-for-id: <yes or no>
    #          Use  0x20-encoded  random  bits  in  the  query  to  foil  spoof
    #          attempts.  This perturbs the lowercase and  uppercase  of  query
    #          names  sent  to  authority servers and checks if the reply still
    #          has the correct casing.  Disabled by default.  This  feature  is
    #          an experimental implementation of draft dns-0x20.
    #          http://tools.ietf.org/html/draft-vixie-dnsext-dns0x20-00
        use-caps-for-id: yes
  
    ### prefetch: <yes or no> | Verificação de tempo em cache
    #          If yes, message cache elements are prefetched before they expire
    #          to keep the cache up to date.  Default is  no.   Turning  it  on
    #          gives about 10 percent more traffic and load on the machine, but
    #          popular items do not expire from the cache.
        prefetch: yes

    ### val-clean-additional: <yes or no>
    #          Instruct  the  validator to remove data from the additional sec-
    #          tion of secure messages that are not signed  properly.  Messages
    #          that  are  insecure,  bogus,  indeterminate or unchecked are not
    #          affected. Default is yes. Use this setting to protect the  users
    #          that  rely on this validator for authentication from potentially
    #          bad data in the additional section.
    #   Segurança extra dados cache
        val-clean-additional: yes

    ### rrset-roundrobin: <yes or no>
    #         If yes, Unbound rotates RRSet order in response (the random num-
    #          ber  is  taken  from the query ID, for speed and thread safety).
    #          Default is no.
        rrset-roundrobin: yes

###   Remote Control Options
#   In  the remote-control: clause are the declarations for the remote con-
#   trol facility.  If this is enabled, the unbound-control(8) utility  can
#   be  used  to  send  commands to the running unbound server.  The server
#   uses these clauses to setup TLSv1 security  for  the  connection.   The
#   unbound-control(8)  utility  also  reads the remote-control section for
#   options.   To  setup  the  correct  self-signed  certificates  use  the
#   unbound-control-setup(8) utility.
### control-enable: <yes or no>
#    The  option is used to enable remote control, default is "no".  If
#    turned off, the server does not listen for control commands.
#
#remote-control:
#    control-enable: yes

#forward-zone:
   # name: "."
   #forward-addr: 1.0.0.1@53#one.one.one.one
   #forward-addr: 1.1.1.1@53#one.one.one.one
   #forward-addr: 8.8.4.4@53#dns.google
   #forward-addr: 8.8.8.8@53#dns.google
   #forward-addr: 9.9.9.9@53#dns.quad9.net
   #forward-addr: 149.112.112.112@53#dns.quad9.net